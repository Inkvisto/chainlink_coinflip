"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseOverrides = void 0;
const error_1 = require("@pnpm/error");
const parse_wanted_dependency_1 = require("@pnpm/parse-wanted-dependency");
const DELIMITER_REGEX = /[^ |@]>/;
function parseOverrides(overrides) {
    return Object.entries(overrides)
        .map(([selector, newPref]) => {
        let delimiterIndex = selector.search(DELIMITER_REGEX);
        if (delimiterIndex !== -1) {
            delimiterIndex++;
            const parentSelector = selector.substring(0, delimiterIndex);
            const childSelector = selector.substring(delimiterIndex + 1);
            return {
                newPref,
                parentPkg: parsePkgSelector(parentSelector),
                targetPkg: parsePkgSelector(childSelector),
            };
        }
        return {
            newPref,
            targetPkg: parsePkgSelector(selector),
        };
    });
}
exports.parseOverrides = parseOverrides;
function parsePkgSelector(selector) {
    const wantedDep = (0, parse_wanted_dependency_1.parseWantedDependency)(selector);
    if (!wantedDep.alias) {
        throw new error_1.PnpmError('INVALID_SELECTOR', `Cannot parse the "${selector}" selector`);
    }
    return {
        name: wantedDep.alias,
        pref: wantedDep.pref,
    };
}
//# sourceMappingURL=index.js.map