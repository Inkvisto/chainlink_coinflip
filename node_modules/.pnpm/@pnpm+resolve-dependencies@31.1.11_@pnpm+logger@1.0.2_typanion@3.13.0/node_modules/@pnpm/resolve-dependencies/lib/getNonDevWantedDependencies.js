"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNonDevWantedDependencies = void 0;
const pickBy_1 = __importDefault(require("ramda/src/pickBy"));
function getNonDevWantedDependencies(pkg) {
    const bd = pkg.bundleDependencies ?? pkg.bundleDependencies;
    const bundledDeps = new Set(Array.isArray(bd) ? bd : []);
    const filterDeps = getNotBundledDeps.bind(null, bundledDeps);
    return getWantedDependenciesFromGivenSet(filterDeps({ ...pkg.optionalDependencies, ...pkg.dependencies }), {
        dependenciesMeta: pkg.dependenciesMeta ?? {},
        devDependencies: {},
        optionalDependencies: pkg.optionalDependencies ?? {},
    });
}
exports.getNonDevWantedDependencies = getNonDevWantedDependencies;
function getWantedDependenciesFromGivenSet(deps, opts) {
    if (!deps)
        return [];
    return Object.entries(deps).map(([alias, pref]) => ({
        alias,
        dev: !!opts.devDependencies[alias],
        injected: opts.dependenciesMeta[alias]?.injected,
        optional: !!opts.optionalDependencies[alias],
        pref,
    }));
}
function getNotBundledDeps(bundledDeps, deps) {
    return (0, pickBy_1.default)((_, depName) => !bundledDeps.has(depName), deps);
}
//# sourceMappingURL=getNonDevWantedDependencies.js.map