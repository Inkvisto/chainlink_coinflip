import { type DepsStateCache } from '@pnpm/calc-dep-state';
import { type StoreController } from '@pnpm/store-controller-types';
import { type DependenciesGraph, type DependenciesGraphNode } from './buildSequence';
export type { DepsStateCache };
export declare function buildModules(depGraph: DependenciesGraph, rootDepPaths: string[], opts: {
    childConcurrency?: number;
    depsToBuild?: Set<string>;
    depsStateCache: DepsStateCache;
    extraBinPaths?: string[];
    extraNodePaths?: string[];
    extraEnv?: Record<string, string>;
    ignoreScripts?: boolean;
    lockfileDir: string;
    optional: boolean;
    preferSymlinkedExecutables?: boolean;
    rawConfig: object;
    unsafePerm: boolean;
    userAgent: string;
    scriptsPrependNodePath?: boolean | 'warn-only';
    scriptShell?: string;
    shellEmulator?: boolean;
    sideEffectsCacheWrite: boolean;
    storeController: StoreController;
    rootModulesDir: string;
    hoistedLocations?: Record<string, string[]>;
}): Promise<void>;
export declare function linkBinsOfDependencies(depNode: DependenciesGraphNode, depGraph: DependenciesGraph, opts: {
    extraNodePaths?: string[];
    optional: boolean;
    preferSymlinkedExecutables?: boolean;
    warn: (message: string) => void;
}): Promise<void>;
