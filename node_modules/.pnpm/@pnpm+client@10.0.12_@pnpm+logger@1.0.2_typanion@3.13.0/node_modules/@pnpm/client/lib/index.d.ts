import { type ResolveFunction, type ResolverFactoryOptions } from '@pnpm/default-resolver';
import { type AgentOptions } from '@pnpm/fetch';
import { type RetryTimeoutOptions } from '@pnpm/fetching-types';
import type { CustomFetchers, GitFetcher, DirectoryFetcher } from '@pnpm/fetcher-base';
import { type TarballFetchers } from '@pnpm/tarball-fetcher';
export type { ResolveFunction };
export type ClientOptions = {
    authConfig: Record<string, string>;
    customFetchers?: CustomFetchers;
    ignoreScripts?: boolean;
    rawConfig: object;
    retry?: RetryTimeoutOptions;
    timeout?: number;
    unsafePerm?: boolean;
    userAgent?: string;
    userConfig?: Record<string, string>;
    gitShallowHosts?: string[];
    resolveSymlinksInInjectedDirs?: boolean;
    includeOnlyPackageFiles?: boolean;
} & ResolverFactoryOptions & AgentOptions;
export interface Client {
    fetchers: Fetchers;
    resolve: ResolveFunction;
}
export declare function createClient(opts: ClientOptions): Client;
export declare function createResolver(opts: ClientOptions): ResolveFunction;
type Fetchers = {
    git: GitFetcher;
    directory: DirectoryFetcher;
} & TarballFetchers;
