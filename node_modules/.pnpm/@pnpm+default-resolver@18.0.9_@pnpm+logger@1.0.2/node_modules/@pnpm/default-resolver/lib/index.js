"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createResolver = void 0;
const error_1 = require("@pnpm/error");
const git_resolver_1 = require("@pnpm/git-resolver");
const local_resolver_1 = require("@pnpm/local-resolver");
const npm_resolver_1 = require("@pnpm/npm-resolver");
const tarball_resolver_1 = require("@pnpm/tarball-resolver");
function createResolver(fetchFromRegistry, getAuthHeader, pnpmOpts) {
    const resolveFromNpm = (0, npm_resolver_1.createNpmResolver)(fetchFromRegistry, getAuthHeader, pnpmOpts);
    const resolveFromGit = (0, git_resolver_1.createGitResolver)(pnpmOpts);
    return async (wantedDependency, opts) => {
        const resolution = await resolveFromNpm(wantedDependency, opts) ??
            (wantedDependency.pref && (await (0, tarball_resolver_1.resolveFromTarball)(wantedDependency) ??
                await resolveFromGit(wantedDependency) ??
                await (0, local_resolver_1.resolveFromLocal)(wantedDependency, opts)));
        if (!resolution) {
            throw new error_1.PnpmError('SPEC_NOT_SUPPORTED_BY_ANY_RESOLVER', `${wantedDependency.alias ? wantedDependency.alias + '@' : ''}${wantedDependency.pref ?? ''} isn't supported by any available resolver.`);
        }
        return resolution;
    };
}
exports.createResolver = createResolver;
//# sourceMappingURL=index.js.map