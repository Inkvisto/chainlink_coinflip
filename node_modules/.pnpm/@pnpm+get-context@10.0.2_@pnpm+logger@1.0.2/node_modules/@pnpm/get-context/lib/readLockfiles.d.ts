import { type Lockfile } from '@pnpm/lockfile-file';
export interface PnpmContext {
    currentLockfile: Lockfile;
    existsCurrentLockfile: boolean;
    existsWantedLockfile: boolean;
    existsNonEmptyWantedLockfile: boolean;
    wantedLockfile: Lockfile;
}
export declare function readLockfiles(opts: {
    autoInstallPeers: boolean;
    excludeLinksFromLockfile: boolean;
    force: boolean;
    forceSharedLockfile: boolean;
    frozenLockfile: boolean;
    projects: Array<{
        id: string;
        rootDir: string;
    }>;
    lockfileDir: string;
    registry: string;
    useLockfile: boolean;
    useGitBranchLockfile?: boolean;
    mergeGitBranchLockfiles?: boolean;
    virtualStoreDir: string;
}): Promise<{
    currentLockfile: Lockfile;
    currentLockfileIsUpToDate: boolean;
    existsCurrentLockfile: boolean;
    existsWantedLockfile: boolean;
    existsNonEmptyWantedLockfile: boolean;
    wantedLockfile: Lockfile;
    wantedLockfileIsModified: boolean;
    lockfileHadConflicts: boolean;
}>;
