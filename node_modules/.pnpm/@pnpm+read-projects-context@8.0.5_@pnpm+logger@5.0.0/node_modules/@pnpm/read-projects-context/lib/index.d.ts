import { type Modules } from '@pnpm/modules-yaml';
import { type DependenciesField, type HoistedDependencies, type Registries } from '@pnpm/types';
export interface ProjectOptions {
    binsDir?: string;
    modulesDir?: string;
    rootDir: string;
}
export declare function readProjectsContext<T>(projects: Array<ProjectOptions & T>, opts: {
    lockfileDir: string;
    modulesDir?: string;
}): Promise<{
    currentHoistPattern?: string[];
    currentPublicHoistPattern?: string[];
    hoist?: boolean;
    hoistedDependencies: HoistedDependencies;
    projects: Array<{
        id: string;
    } & T & Required<ProjectOptions>>;
    include: Record<DependenciesField, boolean>;
    modules: Modules | null;
    pendingBuilds: string[];
    registries: Registries | null | undefined;
    rootModulesDir: string;
    skipped: Set<string>;
}>;
