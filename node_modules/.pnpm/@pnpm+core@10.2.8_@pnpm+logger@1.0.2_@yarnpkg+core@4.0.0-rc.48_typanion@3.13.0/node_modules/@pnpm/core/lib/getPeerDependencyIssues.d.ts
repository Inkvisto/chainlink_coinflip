import { type PeerDependencyIssuesByProjects } from '@pnpm/types';
import { type GetContextOptions, type ProjectOptions } from '@pnpm/get-context';
import { type InstallOptions } from './install/extendInstallOptions';
export type ListMissingPeersOptions = Partial<GetContextOptions> & Pick<InstallOptions, 'hooks' | 'ignoreCompatibilityDb' | 'linkWorkspacePackagesDepth' | 'nodeVersion' | 'nodeLinker' | 'overrides' | 'packageExtensions' | 'preferWorkspacePackages' | 'saveWorkspaceProtocol' | 'storeController' | 'useGitBranchLockfile' | 'workspacePackages'> & Pick<GetContextOptions, 'autoInstallPeers' | 'excludeLinksFromLockfile' | 'storeDir'>;
export declare function getPeerDependencyIssues(projects: ProjectOptions[], opts: ListMissingPeersOptions): Promise<PeerDependencyIssuesByProjects>;
