import { type StoreController } from '@pnpm/store-controller-types';
import { type DependenciesField, type ProjectManifest, type Registries } from '@pnpm/types';
import { type ReporterFunction } from '../types';
interface StrictLinkOptions {
    autoInstallPeers: boolean;
    binsDir: string;
    excludeLinksFromLockfile: boolean;
    force: boolean;
    forceSharedLockfile: boolean;
    useLockfile: boolean;
    lockfileDir: string;
    nodeLinker: 'isolated' | 'hoisted' | 'pnp';
    pinnedVersion: 'major' | 'minor' | 'patch';
    storeController: StoreController;
    manifest: ProjectManifest;
    registries: Registries;
    storeDir: string;
    reporter: ReporterFunction;
    targetDependenciesField?: DependenciesField;
    dir: string;
    preferSymlinkedExecutables: boolean;
    hoistPattern: string[] | undefined;
    forceHoistPattern: boolean;
    publicHoistPattern: string[] | undefined;
    forcePublicHoistPattern: boolean;
    useGitBranchLockfile: boolean;
    mergeGitBranchLockfiles: boolean;
}
export type LinkOptions = Partial<StrictLinkOptions> & Pick<StrictLinkOptions, 'storeController' | 'manifest'>;
export declare function extendOptions(opts: LinkOptions): Promise<StrictLinkOptions>;
export {};
