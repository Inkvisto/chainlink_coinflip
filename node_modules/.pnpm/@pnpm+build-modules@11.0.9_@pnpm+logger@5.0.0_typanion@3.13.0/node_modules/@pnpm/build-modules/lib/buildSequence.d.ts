import { type PackageManifest, type PatchFile } from '@pnpm/types';
export interface DependenciesGraphNode {
    children: Record<string, string>;
    depPath: string;
    dir: string;
    fetchingBundledManifest?: () => Promise<PackageManifest | undefined>;
    filesIndexFile: string;
    hasBin: boolean;
    hasBundledDependencies: boolean;
    installable?: boolean;
    isBuilt?: boolean;
    optional: boolean;
    optionalDependencies: Set<string>;
    requiresBuild?: boolean | any;
    patchFile?: PatchFile;
}
export interface DependenciesGraph {
    [depPath: string]: DependenciesGraphNode;
}
export declare function buildSequence(depGraph: Record<string, Pick<DependenciesGraphNode, 'children' | 'requiresBuild'>>, rootDepPaths: string[]): string[][];
